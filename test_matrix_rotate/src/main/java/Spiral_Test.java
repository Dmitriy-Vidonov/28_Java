public class Spiral_Test {
    public static void main(String[] args) {
        int n=4;
        int[][] mas = new int[n][n];
        for(int i=0; i<n; i++){
            for(int j=0; j<n; j++){
                mas[i][j] = 0;
            }
        }
        int i=1; //это значение будем писать в ячейки массива
        int x = 0; //текущие координаты ячейки - ПО СТРОКАМ
        int y = -1; //текущие координаты ячейки - ПО КОЛОНКАМ (начало с -1 колонки - как бы слева от матрицы)
        //ниже дадим 2 переменные, которые будут отвечать за движение
        int d_row = 0; //движение по рядам. принимает -1, 0, 1. -1 = значит идем по рядам в сторону уменьшения.
        //-1 = идем вверх. ряд поднимается. 0 - находимся в том же ряду. 1 - спускаемся по рядам
        int d_column = 1; //переменая, отвечающая за движение в колонках. по колонкам идем вправо. она изменяется на 1
        //по принимать может -1, 0, 1
        while(i <= Math.pow(n, 2)) {
            if(((x + d_row) < n && 0 <= (x + d_row))
                    && (0 <= (y + d_column) && (y + d_column < n))
            && (mas[x+d_row][y+d_column] == 0)) { //если след.
                // ячейка (к текущему x прибавим движение по рядам
                //ячейка не должна выходить за пределы массива - предел от 0 до <n
                //и аналогичная ситуация по y - прибавляем игреку движение по колонкам. Оно должно быть в пределах от 0 до n
                //и следующая ячейка должна быть не заполнена, т.е. быть нулем
                x += d_row; //к иксу прибавляем движение по рядам
                y += d_column; //к игреку прибавляем движение по колонкам
                mas[x][y] = i;
                i++;
            } else { //описываем ситуацию, если в ячейку шагнуть не сможем. это когда мы вышли за массив либо
                //либо см на занятую ячейку
                if (d_column == 1) { //если идем вправо и d_column == 1, то мы должны начать идти вниз
                    d_column = 0;
                    d_row = 1; //так как мы идем вниз, этой переменной присваиваем 1
                }
                else if(d_row == 1) { //если мы с вами шли вниз, т.е. d_row == 1, то мы должны начать идти влево
                    d_row = 0;
                    d_column = -1; //по колонкам начинаем двигаться влево
                }
                else if(d_column == -1) { //если мы шли влево, то d_column при этом == -1
                    d_column = 0;
                    d_row = -1; //мы должны подниматься вверх, т.е. d_row = -1 (как бы в обратку по строкам идем)
                }
                else if(d_row == -1) { //если мы двигались вверх, при этом d_row = -1, мы при этом должны начать идти вправо
                    d_row = 0;
                    d_column = 1;
                }
            }
        }
        for(int i1=0; i1<n; i1++){
            System.out.println();
            for(int j1=0; j1<n; j1++){
                System.out.print(mas[i1][j1] + " ");
            }
        }
    }
}
